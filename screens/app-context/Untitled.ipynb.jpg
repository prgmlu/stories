{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from glob import glob as g"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "a = g('*.jpg')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "# ara_verbs = [i.split('.')[0] for i in a]\n",
    "# eng_verbs = []"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "يسمعlisten\n",
      "يجريrun\n",
      "يقرأread\n",
      "يتوقفstop\n",
      "يأكلeat\n",
      "يذاكرstudy\n",
      "يعطيgive\n",
      "يصنعmake\n",
      "يلعبplay\n",
      "يشاهدwatch\n",
      "يقودlead\n",
      "يتركleave\n",
      "يشربdrink\n",
      "يغنيsing\n",
      "يقابلmeet\n",
      "يسألask\n",
      "يسقطfall\n",
      "يبيعsell\n",
      "يطبخcook\n",
      "يشدpull\n",
      "يساعدhelp\n",
      "يرسمdraw\n",
      "يكتبwrite\n",
      "يتسوقshop\n",
      "يشعرfeel\n",
      "يقفstand\n",
      "يشتريbuy\n",
      "يعزفplay-music\n",
      "يصابinjure\n",
      "يذهبgo\n",
      "يحبlove\n",
      "يدفعpay\n",
      "يتحدثtalk\n",
      "يخسرlose\n",
      "يقفزjump\n",
      "يضعput\n",
      "يقصcut\n",
      "يجلسsit\n",
      "يضحكlaugh\n",
      "يفكرthink\n",
      "ينظرlook\n",
      "ينموgrow\n",
      "يبنيbuild\n",
      "ينتظرwait\n",
      "يفوزwin\n",
      "يأخذtake\n",
      "يعملwork\n"
     ]
    }
   ],
   "source": [
    "for i in ara_verbs:\n",
    "    inp = input(i)\n",
    "    eng_verbs.append(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "t = '''\n",
    "يسمعlisten\n",
    "يجريrun\n",
    "يقرأread\n",
    "يتوقفstop\n",
    "يأكلeat\n",
    "يذاكرstudy\n",
    "يعطيgive\n",
    "يصنعmake\n",
    "يلعبplay\n",
    "يشاهدwatch\n",
    "يقودlead\n",
    "يتركleave\n",
    "يشربdrink\n",
    "يغنيsing\n",
    "يقابلmeet\n",
    "يسألask\n",
    "يسقطfall\n",
    "يبيعsell\n",
    "يطبخcook\n",
    "يشدpull\n",
    "يساعدhelp\n",
    "يرسمdraw\n",
    "يكتبwrite\n",
    "يتسوقshop\n",
    "يشعرfeel\n",
    "يقفstand\n",
    "يشتريbuy\n",
    "يعزفplay-music\n",
    "يصابinjure\n",
    "يذهبgo\n",
    "يحبlove\n",
    "يدفعpay\n",
    "يتحدثtalk\n",
    "يخسرlose\n",
    "يقفزjump\n",
    "يضعput\n",
    "يقصcut\n",
    "يجلسsit\n",
    "يضحكlaugh\n",
    "يفكرthink\n",
    "ينظرlook\n",
    "ينموgrow\n",
    "يبنيbuild\n",
    "ينتظرwait\n",
    "يفوزwin\n",
    "يأخذtake\n",
    "يعملwork\n",
    "'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "m = [i for i in t if i in 'abcdefghijklmnopqrstuvwxyz\\n']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "eng_verbs = ''.join(m).split()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['listen',\n",
       " 'run',\n",
       " 'read',\n",
       " 'stop',\n",
       " 'eat',\n",
       " 'study',\n",
       " 'give',\n",
       " 'make',\n",
       " 'play',\n",
       " 'watch',\n",
       " 'lead',\n",
       " 'leave',\n",
       " 'drink',\n",
       " 'sing',\n",
       " 'meet',\n",
       " 'ask',\n",
       " 'fall',\n",
       " 'sell',\n",
       " 'cook',\n",
       " 'pull',\n",
       " 'help',\n",
       " 'draw',\n",
       " 'write',\n",
       " 'shop',\n",
       " 'feel',\n",
       " 'stand',\n",
       " 'buy',\n",
       " 'playmusic',\n",
       " 'injure',\n",
       " 'go',\n",
       " 'love',\n",
       " 'pay',\n",
       " 'talk',\n",
       " 'lose',\n",
       " 'jump',\n",
       " 'put',\n",
       " 'cut',\n",
       " 'sit',\n",
       " 'laugh',\n",
       " 'think',\n",
       " 'look',\n",
       " 'grow',\n",
       " 'build',\n",
       " 'wait',\n",
       " 'win',\n",
       " 'take',\n",
       " 'work']"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "eng_verbs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['يسمع.jpg',\n",
       " 'يجري.jpg',\n",
       " 'يقرأ.jpg',\n",
       " 'يتوقف.jpg',\n",
       " 'يأكل.jpg',\n",
       " 'يذاكر.jpg',\n",
       " 'يعطي.jpg',\n",
       " 'يصنع.jpg',\n",
       " 'يلعب.jpg',\n",
       " 'يشاهد.jpg',\n",
       " 'يقود.jpg',\n",
       " 'يترك.jpg',\n",
       " 'يشرب.jpg',\n",
       " 'يغني.jpg',\n",
       " 'يقابل.jpg',\n",
       " 'يسأل.jpg',\n",
       " 'يسقط.jpg',\n",
       " 'يبيع.jpg',\n",
       " 'يطبخ.jpg',\n",
       " 'يشد.jpg',\n",
       " 'يساعد.jpg',\n",
       " 'يرسم.jpg',\n",
       " 'يكتب.jpg',\n",
       " 'يتسوق.jpg',\n",
       " 'يشعر.jpg',\n",
       " 'يقف.jpg',\n",
       " 'يشتري.jpg',\n",
       " 'يعزف.jpg',\n",
       " 'يصاب.jpg',\n",
       " 'يذهب.jpg',\n",
       " 'يحب.jpg',\n",
       " 'يدفع.jpg',\n",
       " 'يتحدث.jpg',\n",
       " 'يخسر.jpg',\n",
       " 'يقفز.jpg',\n",
       " 'يضع.jpg',\n",
       " 'يقص.jpg',\n",
       " 'يجلس.jpg',\n",
       " 'يضحك.jpg',\n",
       " 'يفكر.jpg',\n",
       " 'ينظر.jpg',\n",
       " 'ينمو.jpg',\n",
       " 'يبني.jpg',\n",
       " 'ينتظر.jpg',\n",
       " 'يفوز.jpg',\n",
       " 'يأخذ.jpg',\n",
       " 'يعمل.jpg']"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for f in g('*.jpg'):\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
